/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.quanlykhoahoc.GUI;

import com.quanlykhoahoc.BUS.CourseInstructorBUS;
import com.quanlykhoahoc.BUS.StudentGradeBUS;
import com.quanlykhoahoc.DTO.*;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

/**
 *
 * @author pc
 */
public class StudentGradeGUI extends javax.swing.JPanel {
    private final StudentGradeBUS studentGradeBUS = new StudentGradeBUS();
    /**
     * Creates new form CourseInstructorGUI
     */
    public StudentGradeGUI() {
        initComponents();
        showTableData();
        populateCourseComboBox();
        populateStudentComboBox();
        // Table listener
        tableStudentGrade.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Double-clicked
                if (e.getClickCount() == 2) {
                    tableOnDoubleClick();
                }
            }
        });
    }

    private void populateStudentComboBox() {
        ArrayList<StudentDTO> students = studentGradeBUS.getStudents();
        for (StudentDTO student : students) {
            cbStudent.addItem(student);
        }
        cbStudent.setRenderer(new StudentComboBoxRender());
    }

    private void populateCourseComboBox() {
        ArrayList<CourseDTO> courses = studentGradeBUS.getCourse();
        for (CourseDTO course : courses) {
            cbCourse.addItem(course);
        }
        cbCourse.setRenderer(new CourseComboBoxRender());
    }

    private void changeTableHeight(JTable table) {
        int rowHeight = table.getRowHeight();
        int numRows = table.getRowCount();
        int height = numRows * rowHeight;
        table.setPreferredSize(new Dimension(table.getPreferredSize().width, height));
    }

    private void showTableData() {
        DefaultTableModel model = (DefaultTableModel) tableStudentGrade.getModel();
        model.setRowCount(0);
        ArrayList<StudentGradeDTO> studentGrades = studentGradeBUS.getStudentGrades();
        for (StudentGradeDTO studentGrade: studentGrades) {
            Object[] row = studentGrade.toObject();
            model.addRow(row);
        }
        changeTableHeight(tableStudentGrade);
     }

    private void showTableData(ArrayList<StudentGradeDTO> studentGrades) {
        DefaultTableModel model = (DefaultTableModel) tableStudentGrade.getModel();
        model.setRowCount(0);
        for (StudentGradeDTO studentGrade: studentGrades) {
            Object[] row = studentGrade.toObject();
            model.addRow(row);
        }
        changeTableHeight(tableStudentGrade);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbStudent = new javax.swing.JComboBox<>();
        cbCourse = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        spnGrade = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStudentGrade = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Quản lý kết quả khóa học");
        jPanel1.add(jLabel1);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Student:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Course:");

        cbStudent.setMinimumSize(new java.awt.Dimension(72, 25));
        cbStudent.setPreferredSize(null);

        cbCourse.setMinimumSize(new java.awt.Dimension(72, 25));
        cbCourse.setPreferredSize(null);

        btnSearch.setText("Search");
        btnSearch.setPreferredSize(null);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchOnClick(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Search by title or fullname: ");

        txtSearch.setPreferredSize(null);

        btnAdd.setText("Add");
        btnAdd.setPreferredSize(new java.awt.Dimension(72, 25));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOnClick(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setPreferredSize(new java.awt.Dimension(72, 25));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOnClick(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.setPreferredSize(new java.awt.Dimension(72, 25));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditOnClick(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.setPreferredSize(new java.awt.Dimension(72, 25));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetOnClick(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Grade: ");

        spnGrade.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(10.0f), Float.valueOf(0.1f)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                    .addComponent(jLabel4))
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(cbStudent, 0, 136, Short.MAX_VALUE)
                    .addComponent(cbCourse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spnGrade))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbStudent, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spnGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 300));

        tableStudentGrade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EnrollmentID", "StudentID", "Fullname", "CourseID", "CourseTItle", "CourseCredits", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableStudentGrade.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        tableStudentGrade.setPreferredSize(new java.awt.Dimension(842, 500));
        tableStudentGrade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableOnClick(evt);
            }
        });
        jScrollPane1.setViewportView(tableStudentGrade);
        if (tableStudentGrade.getColumnModel().getColumnCount() > 0) {
            tableStudentGrade.getColumnModel().getColumn(0).setResizable(false);
            tableStudentGrade.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableStudentGrade.getColumnModel().getColumn(1).setResizable(false);
            tableStudentGrade.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableStudentGrade.getColumnModel().getColumn(2).setResizable(false);
            tableStudentGrade.getColumnModel().getColumn(2).setPreferredWidth(150);
            tableStudentGrade.getColumnModel().getColumn(3).setResizable(false);
            tableStudentGrade.getColumnModel().getColumn(3).setPreferredWidth(50);
            tableStudentGrade.getColumnModel().getColumn(4).setResizable(false);
            tableStudentGrade.getColumnModel().getColumn(5).setResizable(false);
            tableStudentGrade.getColumnModel().getColumn(5).setPreferredWidth(50);
            tableStudentGrade.getColumnModel().getColumn(6).setResizable(false);
            tableStudentGrade.getColumnModel().getColumn(6).setPreferredWidth(50);
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0; x < 6; x++){
            tableStudentGrade.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
        tableStudentGrade.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean isNullOrEmptyString(String str) {
        return str == null || str.trim().isEmpty();
    }

    private void btnAddOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOnClick
        StudentDTO student = (StudentDTO) cbStudent.getSelectedItem();
        CourseDTO course = (CourseDTO) cbCourse.getSelectedItem();
        float grade = (float) spnGrade.getValue();

        StudentGradeDTO studentGrade = new StudentGradeDTO(-1, course, student, grade);
        boolean success = studentGradeBUS.add(studentGrade);
        if (success) {
            JOptionPane.showMessageDialog(this, "Successfully added 1 row.");
            showTableData();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add 1 row.");
        }

    }//GEN-LAST:event_btnAddOnClick

    private void btnDeleteOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tableStudentGrade.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int enrollmentID = (int) tableStudentGrade.getValueAt(selectedRow, 0);
        boolean success = studentGradeBUS.delete(enrollmentID);
        if (success) {
            JOptionPane.showMessageDialog(this, "Successfully deleted a row.");
            showTableData();
            return;
        }
        JOptionPane.showMessageDialog(this, "Failed to delete a row");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditOnClick
        int selectedRow = tableStudentGrade.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please choose a row to edit.",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Get studentGrade need to update
        int enrollmentID = (int) tableStudentGrade.getValueAt(selectedRow, 0);

        // Get Update studentGrade data
        StudentDTO student = (StudentDTO) cbStudent.getSelectedItem();
        CourseDTO course = (CourseDTO) cbCourse.getSelectedItem();
        float grade = (float) spnGrade.getValue();
        StudentGradeDTO studentGrade = new StudentGradeDTO(enrollmentID, course, student, grade);

        boolean success = studentGradeBUS.update(studentGrade);
        if (success) {
            JOptionPane.showMessageDialog(this, "Successfully edited a row.");
            showTableData();
            return;
        }
        JOptionPane.showMessageDialog(this, "Failed to edit a row.");
    }//GEN-LAST:event_btnEditOnClick

    private void btnResetOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetOnClick
        spnGrade.setValue(0);
        txtSearch.setText("");
        showTableData();
    }//GEN-LAST:event_btnResetOnClick

    private void btnSearchOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchOnClick
        String name = txtSearch.getText();

        if (isNullOrEmptyString(name)) {
            JOptionPane.showMessageDialog(this, "Please enter name to search.",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        showTableData(studentGradeBUS.findByCourseTitleOrStudentName(name));
    }//GEN-LAST:event_btnSearchOnClick

    private void tableOnClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableOnClick
        int selectedRow = tableStudentGrade.getSelectedRow();

        if (selectedRow != -1) {
            int studentId = (int) tableStudentGrade.getValueAt(selectedRow, 1);
            int courseId = (int) tableStudentGrade.getValueAt(selectedRow, 3);
            float grade = (float) tableStudentGrade.getValueAt(selectedRow, 6);
            cbStudent.setSelectedItem(studentGradeBUS.findStudentById(studentId));
            cbCourse.setSelectedItem(studentGradeBUS.findCourseById(courseId));
            spnGrade.setValue(grade);
        }

    }//GEN-LAST:event_tableOnClick

    private void tableOnDoubleClick() {
//        int selectedRow = tableStudentGrade.getSelectedRow();
//        int courseId = (int) tableStudentGrade.getValueAt(selectedRow, 0);
//        int instructorId = (int) tableStudentGrade.getValueAt(selectedRow, 1);
//
//        CourseInstructorDTO courseInstructor = new CourseInstructorDTO(courseId, instructorId);
//        CourseInstructorDetailGUI detailForm = new CourseInstructorDetailGUI(courseInstructor);
//        detailForm.setLocationRelativeTo(null);
//        detailForm.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<CourseDTO> cbCourse;
    private javax.swing.JComboBox<StudentDTO> cbStudent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spnGrade;
    private javax.swing.JTable tableStudentGrade;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
