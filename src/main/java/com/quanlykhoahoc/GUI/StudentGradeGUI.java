/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.quanlykhoahoc.GUI;

import com.quanlykhoahoc.BUS.CourseInstructorBUS;
import com.quanlykhoahoc.DTO.CourseInstructorDTO;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

/**
 *
 * @author pc
 */
public class StudentGradeGUI extends javax.swing.JPanel {
    private CourseInstructorBUS courseInstructorBUS;
    /**
     * Creates new form CourseInstructorGUI
     */
    public StudentGradeGUI() {
        initComponents();
        courseInstructorBUS = new CourseInstructorBUS();
        showTableData();
        // Table listener
        tableCourseInstructor.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Double-clicked
                if (e.getClickCount() == 2) {
                    tableOnDoubleClick();
                }
            }
        });
    }

    private void showTableData() {
        DefaultTableModel model = (DefaultTableModel) tableCourseInstructor.getModel();
        model.setRowCount(0);
        ArrayList<CourseInstructorDTO> courseInstructors = courseInstructorBUS.getCourseInstructors();
        
        for (CourseInstructorDTO courseInstructor: courseInstructors) {
            Object[] row = courseInstructor.toObject();
            model.addRow(row);
        }
    }

    private void showTableData(ArrayList<CourseInstructorDTO> courseInstructors) {
        DefaultTableModel model = (DefaultTableModel) tableCourseInstructor.getModel();
        model.setRowCount(0);
        for (CourseInstructorDTO courseInstructor: courseInstructors) {
            Object[] row = courseInstructor.toObject();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCourseInstructor = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbCourse = new javax.swing.JComboBox<>();
        cbInstructor = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Quản lý phân công giảng dạy");
        jPanel1.add(jLabel1);

        tableCourseInstructor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CourseID", "PersonID", "CourseTItle", "CourseCredits", "InstructorName", "InstructorHireDate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCourseInstructor.setPreferredSize(new java.awt.Dimension(842, 300));
        jScrollPane1.add(tableCourseInstructor);
        tableCourseInstructor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableOnClick(evt);
            }
        });
        jScrollPane1.setViewportView(tableCourseInstructor);
        if (tableCourseInstructor.getColumnModel().getColumnCount() > 0) {
            tableCourseInstructor.getColumnModel().getColumn(0).setResizable(false);
            tableCourseInstructor.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableCourseInstructor.getColumnModel().getColumn(1).setResizable(false);
            tableCourseInstructor.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableCourseInstructor.getColumnModel().getColumn(2).setResizable(false);
            tableCourseInstructor.getColumnModel().getColumn(3).setResizable(false);
            tableCourseInstructor.getColumnModel().getColumn(4).setResizable(false);
            tableCourseInstructor.getColumnModel().getColumn(5).setResizable(false);
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        for(int x=0; x < 6; x++){
            tableCourseInstructor.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );
        }
        tableCourseInstructor.getAccessibleContext().setAccessibleName("");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Course id: ");
        jLabel2.setPreferredSize(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Instructor id: ");
        jLabel3.setPreferredSize(null);

        cbCourse.setEditable(true);
        cbCourse.setMinimumSize(new java.awt.Dimension(72, 25));
        cbCourse.setPreferredSize(null);

        cbInstructor.setEditable(true);
        cbInstructor.setMinimumSize(new java.awt.Dimension(72, 25));
        cbInstructor.setPreferredSize(null);

        btnSearch.setText("Search");
        btnSearch.setPreferredSize(null);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchOnClick(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Search by name: ");
        jLabel4.setPreferredSize(null);

        txtSearch.setPreferredSize(null);

        btnAdd.setText("Add");
        btnAdd.setPreferredSize(new java.awt.Dimension(72, 25));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOnClick(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setPreferredSize(new java.awt.Dimension(72, 25));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOnClick(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.setPreferredSize(new java.awt.Dimension(72, 25));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditOnClick(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.setPreferredSize(new java.awt.Dimension(72, 25));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetOnClick(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(cbCourse, 0, 136, Short.MAX_VALUE)
                    .addComponent(cbInstructor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean isNullOrEmptyString(String str) {
        return str == null || str.trim().isEmpty();
    }

    private void btnAddOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOnClick
        String itemCourse = String.valueOf(cbCourse.getSelectedItem());
        String itemInstructor = String.valueOf(cbInstructor.getSelectedItem());
        if (isNullOrEmptyString(itemCourse)) {
            JOptionPane.showMessageDialog(this,
                    "The course id field cannot be empty.",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (isNullOrEmptyString(itemInstructor)) {
            JOptionPane.showMessageDialog(this,
                    "The instructor id field cannot be empty.",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int courseId = Integer.parseInt(itemCourse);
        int instructorId = Integer.parseInt(itemInstructor);

        CourseInstructorDTO courseInstructorDTO = new CourseInstructorDTO(courseId, instructorId);
        boolean success = courseInstructorBUS.add(courseInstructorDTO);
        if (success) {
            JOptionPane.showMessageDialog(this, "Successfully added 1 row.");
            showTableData();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add 1 row.");
        }

    }//GEN-LAST:event_btnAddOnClick

    private void btnDeleteOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tableCourseInstructor.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int courseId = (int) tableCourseInstructor.getValueAt(selectedRow, 0);
        int instructorId = (int) tableCourseInstructor.getValueAt(selectedRow, 1);

        boolean success = courseInstructorBUS.delete(courseId, instructorId);
        if (success) {
            JOptionPane.showMessageDialog(this, "Successfully deleted a row.");
            showTableData();
            return;
        }
        JOptionPane.showMessageDialog(this, "Failed to delete a row");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditOnClick
        // Get selected courseInstructor data
        int selectedRow = tableCourseInstructor.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please choose a row to edit.",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int courseId = (int) tableCourseInstructor.getValueAt(selectedRow, 0);
        int instructorId = (int) tableCourseInstructor.getValueAt(selectedRow, 1);

        String itemCourse = String.valueOf(cbCourse.getSelectedItem());
        String itemInstructor = String.valueOf(cbInstructor.getSelectedItem());
        // Check empty field
        if (isNullOrEmptyString(itemCourse)) {
            JOptionPane.showMessageDialog(btnAdd,
                    "The course id field cannot be empty.",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (isNullOrEmptyString(itemInstructor)) {
            JOptionPane.showMessageDialog(btnAdd,
                    "The instructor id field cannot be empty.",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Get Update courseInstructor data
        int updateCourseId = Integer.parseInt(itemCourse);
        int updateInstructorId = Integer.parseInt(itemInstructor);
        CourseInstructorDTO updateCourseInstructor = new CourseInstructorDTO(updateCourseId, updateInstructorId);


        boolean success = courseInstructorBUS.update(courseId, instructorId, updateCourseInstructor);
        if (success) {
            JOptionPane.showMessageDialog(this, "Successfully edited a row.");
            showTableData();
            return;
        }
        JOptionPane.showMessageDialog(this, "Failed to edit a row.");
    }//GEN-LAST:event_btnEditOnClick

    private void btnResetOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetOnClick
        cbCourse.setSelectedItem(null);
        cbInstructor.setSelectedItem(null);
        txtSearch.setText("");
        showTableData();
    }//GEN-LAST:event_btnResetOnClick

    private void btnSearchOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchOnClick
        String name = txtSearch.getText();

        if (isNullOrEmptyString(name)) {
            JOptionPane.showMessageDialog(this, "Please enter name to search.",
                    "Error message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        showTableData(courseInstructorBUS.findByCourseTitleOrInstructor(name));
    }//GEN-LAST:event_btnSearchOnClick

    private void tableOnClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableOnClick
        int selectedRow = tableCourseInstructor.getSelectedRow();

        if (selectedRow != -1) {
            int courseId = (int) tableCourseInstructor.getValueAt(selectedRow, 0);
            int instructorId = (int) tableCourseInstructor.getValueAt(selectedRow, 1);
            cbCourse.setSelectedItem(courseId);
            cbInstructor.setSelectedItem(instructorId);
        }

    }//GEN-LAST:event_tableOnClick

    private void tableOnDoubleClick() {
        int selectedRow = tableCourseInstructor.getSelectedRow();
        int courseId = (int) tableCourseInstructor.getValueAt(selectedRow, 0);
        int instructorId = (int) tableCourseInstructor.getValueAt(selectedRow, 1);

        CourseInstructorDTO courseInstructor = new CourseInstructorDTO(courseId, instructorId);
        CourseInstructorDetailGUI detailForm = new CourseInstructorDetailGUI(courseInstructor);
        detailForm.setLocationRelativeTo(null);
        detailForm.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbCourse;
    private javax.swing.JComboBox<String> cbInstructor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCourseInstructor;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
